function [precision,recall,averageprecision,averagerecall]=...
    Getquantitativemeasurement(gtimages,filename_sequence_basename_frames_or_video,trajectories,labelledvideo,mintracklength,...
    printonscreen,framesforevaluation,fframe,includebackground)
%The function measure the maximum achievable precision and recall, global
%and averaged over objects
%The estimation does not include the background by default

%framesforevaluation=[]; _defined according to the first frame

noFrames=numel(gtimages);
noTracks=numel(trajectories);

if ( (~exist('mintracklength','var')) || (isempty(mintracklength)) )
    mintracklength=5;
end
if ( (~exist('printonscreen','var')) || (isempty(printonscreen)) )
    printonscreen=false;
end
if ( (~exist('framesforevaluation','var')) || (isempty(framesforevaluation)) )
    framesforevaluation=1:noFrames;
end
if (numel(framesforevaluation)==1) %This means that at least two frames must be requested if fframe is not empty
    if ( (exist('fframe','var')) && (~isempty(fframe)) )
        framesforevaluation=fframe:fframe+framesforevaluation-1;
    end
end
if (any(framesforevaluation>noFrames))
    framesforevaluation=framesforevaluation(framesforevaluation<=noFrames);
end
if ( (~exist('includebackground','var')) || (isempty(includebackground)) )
    includebackground=false; %by default background is not included in calculations
end



% bgcode=[0,0,0] or 0;
% mbcode=[192,0,255;192,192,192] or [192;255];
if ( (~isfield(filename_sequence_basename_frames_or_video,'bgcode')) || (~isfield(filename_sequence_basename_frames_or_video,'mbcode')) )
    fprintf('Please define the background and moving body codes\n');
    precision=0;recall=0;averageprecision=0;averagerecall=0;
    return;
end
bgcode=filename_sequence_basename_frames_or_video.bgcode;
mbcode=filename_sequence_basename_frames_or_video.mbcode;

allcode=[bgcode;mbcode];
noallobjects=size(allcode,1);
textallobjects=cell(1,noallobjects);
textallobjects{1}='Background';
for i=2:noallobjects
    textallobjects{i}=['Object ',num2str(i-1)];
end

firstnonempty=0;
for frame=framesforevaluation
    if (isempty(gtimages{frame}))
        continue;
    else
        firstnonempty=frame;
        break;
    end
end
if (firstnonempty==0)
    precision=0;recall=0;averageprecision=0;averagerecall=0;
    return;
end
imagesize=size(gtimages{firstnonempty});
imagesizetwo=imagesize(1:2);

nomaxframes=max(framesforevaluation);


gtmasks=false(imagesizetwo(1),imagesizetwo(2),nomaxframes,noallobjects);
validobjectmasks=false(nomaxframes,noallobjects);
for frame=framesforevaluation
    if (isempty(gtimages{frame}))
        continue;
    end
    for i=1:noallobjects
        if (numel(size(gtimages{frame}))>2)
            tmpmask=cat(3,ones(imagesizetwo).*allcode(i,1),ones(imagesizetwo).*allcode(i,2),ones(imagesizetwo).*allcode(i,3));
            gtmasks(:,:,frame,i)=all(gtimages{frame}==tmpmask,3);
        else
            tmpmask=ones(imagesizetwo).*allcode(i);
            gtmasks(:,:,frame,i)=(gtimages{frame}==tmpmask);
        end
        if (any(any(gtmasks(:,:,frame,i)))) %this identifies masks where the objects occur
            validobjectmasks(frame,i)=true;
            if (printonscreen)
                Init_figure_no(1);
                imshow(squeeze(gtmasks(:,:,frame,i)));
                title(['Frame ',num2str(frame),' - code ',textallobjects{i}]);
                pause(0.1);
            end
        end
    end
end

totalobjectpixels=zeros(1,noallobjects);
for i=1:noallobjects
    totalobjectpixels(i)=sum(sum(sum(  gtmasks(:, :, validobjectmasks(:,i) , i)  )));
end



allprecisepixels=zeros(1,noallobjects);
allrecalledpixels=zeros(1,noallobjects);
for traj=1:noTracks
    trackmask=false(size(labelledvideo));
    if (trajectories{traj}.totalLength>=mintracklength)
        therange=trajectories{traj}.startFrame:trajectories{traj}.endFrame;

        newrange=therange;
        for rr=therange
            if (~any(framesforevaluation==rr))
                newrange(newrange==rr)=[];
            end
        end
        therange=newrange; clear newrange;


        trackmask(:,:,therange)= (labelledvideo(:,:,therange)==trajectories{traj}.label);
    end
    
    pixelsperobject=zeros(1,noallobjects);
    for i=1:noallobjects
        objecttrackmask=trackmask(:,:,validobjectmasks(:,i));
        objecttruepixels=gtmasks(:,:,validobjectmasks(:,i),i);
        
        pixelsperobject(i)=sum(objecttruepixels(objecttrackmask)); %indexing is equivalent to logical AND
    end
    
    [precisepixels,chosenobject]=max(pixelsperobject);
    
    objecttrackmask=trackmask(:,:,validobjectmasks(:,chosenobject));
    totalrecalledpixels=sum(objecttrackmask(:));
    %precisepixels/totalrecalledpixels is precision
    %sum of precisepixels on sum of objecttrupixels is recall
    
    allprecisepixels(chosenobject)=allprecisepixels(chosenobject)+precisepixels;
    allrecalledpixels(chosenobject)=allrecalledpixels(chosenobject)+totalrecalledpixels;
    
end

precisionperobject=zeros(1,noallobjects);
recallperobject=zeros(1,noallobjects);
for i=1:noallobjects
    if (allrecalledpixels(i)>0)
        precisionperobject(i)=allprecisepixels(i)/allrecalledpixels(i);
    else
        precisionperobject(i)=0;
        fprintf('Could not compute precision for %s\n',textallobjects{i});
    end
    if (totalobjectpixels(i)>0)
        recallperobject(i)=allprecisepixels(i)/totalobjectpixels(i);
    else
        recallperobject(i)=0;
        fprintf('Could not compute recall for %s\n',textallobjects{i});
    end
end
if (includebackground)
    averageprecision=mean(precisionperobject);
    averagerecall=mean(recallperobject);
else    
    averageprecision=mean(precisionperobject(2:end)); %(2:end) as the background should not count
    averagerecall=mean(recallperobject(2:end)); %(2:end) as the background should not count
end

if (sum(allrecalledpixels(2:end))>0) %(2:end) as the background should not count
    precision=sum(allprecisepixels(2:end))/sum(allrecalledpixels(2:end));
else
    precision=0;
    fprintf('Could not compute precision\n');
end
if (sum(totalobjectpixels(2:end))>0) %(2:end) as the background should not count
    recall=sum(allprecisepixels(2:end))/sum(totalobjectpixels(2:end));
else
    recall=0;
    fprintf('Could not compute recall\n');
end



function coverindexmintracklength=Otherfunctions(labelledvideo,trajectories)

%Measure region cover with mintracklength
mintracklength=5;

regioncover=false(size(labelledvideo));
for traj=1:noTracks
    if (trajectories{traj}.totalLength>=mintracklength)
        therange=trajectories{traj}.startFrame:trajectories{traj}.endFrame;
        regioncover(:,:,therange)= regioncover(:,:,therange) | (labelledvideo(:,:,therange)==trajectories{traj}.label);
    end
end
coverindexmintracklength=sum(regioncover(:));


